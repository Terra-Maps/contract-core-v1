#pragma version 2
//---------------------Constructor------------------------//
    // Check for the Application Creation 
    int 0
    txn ApplicationID
    ==

    bz check_parms

    // Set the Creator Address
    byte "Creator"
    txn Sender
    app_global_put

    // Set the Escrow Contract Address
    byte "Escrow"
    txn ApplicationArgs 1
    app_global_put

    int 1
    return

//---------------------Constructor------------------------//

check_parms:

//---------------------Opt-In------------------------//
    // Check for the Application Opt-In Code
    int 0
    txn NumAppArgs
    ==

    bnz finished
//---------------------Opt-In------------------------//

    // Update Escrow Address
    txna ApplicationArgs 0
    byte "update_escrow"
    ==
    bnz update_escrow

    //Create a new POI
    txna ApplicationArgs 0
    byte "create_poi"
    ==
    bnz create_poi
    
    // Claim votes
    txna ApplicationArgs 0
    byte "vote_poi" 
    ==
    bnz vote_poi
    
    //claim stake
    gtxna 0 ApplicationArgs 0
    byte "reveal_vote" 
    ==
    bnz reveal_vote
    
    b failed

//------Functions --------//


//---------------------Update Escrow Account------------------------//

update_escrow:
    // verify that the creator is
    // making the call
    byte "Creator"
    app_global_get
    txn Sender
    ==

    // the call should pass the escrow 
    // address
    txn NumAppArgs
    int 2
    ==
    &&
    bz failed

    // store the address in global state
    // this parameter should be addr:
    byte "Escrow"
    txna ApplicationArgs 1
    app_global_put
    int 1
    return

//---------------------Update Escrow Account------------------------//


// start_here_create_poi
create_poi:
        // global GroupSize
        // int 2
        // ==
        // // an ApplicationCall (ie call escrow smart contract)
        // gtxn 0 TypeEnum
        // int 4
        // ==
        // &&
        
        // // check applicationID
        // gtxn 0 ApplicationID
        // byte "Escrow"
        // app_global_get
        // ==
        // &&
        // bnz failed
        // gtxn 0 Amount
        // int 10
        // <
        // &&
    
    
    // Check the note field format
    // terra-ttnfu1r-{"nm":"Buddha Jayanti Park","gh":"ttnfu1r","st":"v"}
    
    
    txn Note
    substring 0 6
    byte "terra-"
    ==
    bz failed
    // TBD - Create the whole note from the ApplicationArgs and check if it matches the note of transaction
    
    
    // TBD - Check if the ApplicationArgs have been properly supplied in the call transaction
    
    // store the POI in creators state receiver
    int 0
    txna ApplicationArgs 1
    // Yes Votes Total
    byte "y"
    int 1
    itob
    concat
    // No votes
    byte "-n-"
    concat
    int 0
    itob
    concat
    // Total Stake on POI
    byte "-t-"
    concat
    txn Amount
    itob
    concat
    byte "-"
    concat
    // Geohash
    txna ApplicationArgs 1
    concat
    byte "-"
    concat
    // Creation Timestamp
    global LatestTimestamp
    itob
    concat
    app_local_put
    b finished
// end_here_create_poi

vote_poi:
        // global GroupSize
        // int 2
        // ==
        // // an ApplicationCall (ie call escrow smart contract)
        // gtxn 0 TypeEnum
        // int 4
        // ==
        // &&
        
        // // check applicationID
        // gtxn 0 ApplicationID
        // int 12333233
        // ==
        // &&
        // bnz failed
        // gtxn 0 AssetAmount
        // int 10
        // <
        // &&

    // store the POI in creators state receiver
        int 1
        byte "ttnfu1r"
        // Yes Votes Total
        byte "y"
        int 1
        itob
        concat
        // No votes
        byte "-n-"
        concat
        int 0
        itob
        concat
        // Total Stake on POI
        byte "-t-"
        concat
        txn Amount
        itob
        concat
        byte "-"
        concat
        // Geohash
        byte "ttnfu1r"
        concat
        byte "-"
        concat
        // Creation Timestamp
        global LatestTimestamp
        itob
        concat
        app_local_put
    
    // // TBD - Check if the ApplicationArgs have been properly supplied in the call transaction
    // int 1
    // // Get Geohash
    // txna ApplicationArgs 1
    // app_local_get
    // // Get the timestamp and check that it is within the period time
    // substring 40 48
    // btoi
    // // 259200, 518400, 777600, 1036800
    // int 259200
    // +
    // global LatestTimestamp
    // >

    // store the POI in users state
    int 0
    txna ApplicationArgs 1
    // Yes Votes Total
    txna Accounts 1
    byte "-"
    concat
    // User Salted Vote
    txna ApplicationArgs 2
    concat
    byte "-"
    concat
    // Amount Staked by the user
    txn Amount
    itob
    concat
    app_local_put
    b finished

reveal_vote:

        // store the POI in creators state receiver
        int 1
        byte "ttnfu1r"
        // Yes Votes Total
        byte "y"
        int 1
        itob
        concat
        // No votes
        byte "-n-"
        concat
        int 0
        itob
        concat
        // Total Stake on POI
        byte "-t-"
        concat
        txn Amount
        itob
        concat
        byte "-"
        concat
        // Geohash
        byte "ttnfu1r"
        concat
        byte "-"
        concat
        // Creation Timestamp
        global LatestTimestamp
        itob
        concat
        app_local_put
   
        // store the POI in users state
        int 0
        byte "ttnfu1r"
        // Yes Votes Total
        txna Accounts 1
        byte "-"
        concat
        // User Salted Vote
        byte "a3793e3fad28d443"
        concat
        byte "-"
        concat
        // Amount Staked by the user
        txn Amount
        itob
        concat
        app_local_put

    int 1
    // Get Geohash
    txna ApplicationArgs 1
    app_local_get 
    // Convert vote to hash
    // yes/no
    txna ApplicationArgs 2
    // salt
    txna ApplicationArgs 3
    concat
    sha256
    substring 0 8
    // getting string again
    int 0 
    txna ApplicationArgs 1
    app_local_get 
    substring 33 49
    ==
    bz failed
    // Get string from voter's local state
    int 0 
    txna ApplicationArgs 1
    app_local_get 
    
    // check if account is correct
    substring 0 32
    txna Accounts 1
    ==
    bz failed
    //storing revealed vote in user space
    int 0
    txna ApplicationArgs 1
    byte "c-"
    txna Accounts 1
    concat 
    byte "-v-"
    concat
    txna ApplicationArgs 2
    concat
    byte "-s-"
    concat
    int 0 
    txna ApplicationArgs 1
    app_local_get 
    substring 50 58
    concat
    app_local_put
    // check casted vote
    byte "yes"
    txna ApplicationArgs 2
    ==
    bnz vote_yes
    byte "no"
    txna ApplicationArgs 2
    ==
    bnz vote_no
    
    b failed
vote_yes:
    
    int 1 
    txna ApplicationArgs 1
    app_local_get
    substring 1 9
    btoi
    int 1
    +
    store 0
    
    byte "y"
    load 0
    itob
    concat
  
    int 1 
    txna ApplicationArgs 1
    app_local_get
    
    int 9 
    
    int 1 
    txna ApplicationArgs 1
    app_local_get
    len
    substring3 
    concat 
    
    
    store 1
    
    int 1
    txna ApplicationArgs 1
    load 1
    app_local_put
    b finished
    
vote_no:
    
    
    int 1 
    txna ApplicationArgs 1
    app_local_get
    substring 13 21
    btoi
    int 1
    +
    store 0
    
    int 1 
    txna ApplicationArgs 1
    app_local_get
    substring 0 13
    load 0
    itob
    concat
  
    int 1 
    txna ApplicationArgs 1
    app_local_get
    
    int 21 
    
    int 1 
    txna ApplicationArgs 1
    app_local_get
    len
    substring3 
    concat 
    
    
    store 1
    
    int 1
    txna ApplicationArgs 1
    load 1
    app_local_put
    b finished    
    
    
    
failed:
int 0
return
finished:
int 1
return
